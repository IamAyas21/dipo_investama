@model DIPO_INVESTAMA.Models.DashboardViewModels
@using (Html.BeginForm("Index", "Home", FormMethod.Post))
{
    <div class="row">
        <div class="col-lg-6">
            <div class="box box-primary">
                <div class="box-header with-border">
                    <div class="row">
                        <div class="col-sm-6">
                            <h4>Report of Bank</h4>
                        </div>
                        <div class="col-sm-6" align="right">
                            @*<button type="submit" name="Submit" value="PDF_ReportBank"><img src="~/Assets/icon/pdf.png" width="30" height="30" /></button>*@
                            <button type="submit" name="Submit" value="Excel_ReportBank"><img src="~/Assets/icon_xlxs.png" width="30" height="30" /></button>
                        </div>
                    </div>
                </div>
                <div class="box-body">
                    <div class="row">
                        <div class="col-xs-4">
                            <label>Filter</label>
                            @Html.DropDownListFor(model => model.FilterReportBank, ViewBag.FilterBankList as SelectList, new { @class = "form-control" })
                        </div>
                        <div class="col-xs-4">
                            <label>Periode</label>
                            @Html.TextBoxFor(model => model.PeriodeReportBank, new { @class = "form-control pull-left", @placeholder = "Date", autocomplete = "off" })
                        </div>
                        <div class="col-xs-4">
                            <label>View by</label>
                            @Html.DropDownListFor(model => model.ViewByReportBank
                       , new List<SelectListItem>
                        {
                           new SelectListItem{ Text="Choose", Value = "" },
                           new SelectListItem{ Text="Monthly", Value = "Monthly" },
                           new SelectListItem{ Text="Yearly", Value = "Yearly" }
                        }, new { @class = "form-control" })
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-xs-12 chart-container">
                            <div id="chart" >
                                <canvas id="areaChartBank"></canvas>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-xs-3">

                        </div>
                        <div class="col-xs-3">

                        </div>
                        <div class="col-xs-3">

                        </div>
                        <div class="col-xs-3">

                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-lg-6">
            <div class="box box-primary">
                <div class="box-header with-border">
                    <div class="row">
                        <div class="col-sm-6">
                            <h4>Report of Account</h4>
                        </div>
                        <div class="col-sm-6" align="right">
                            @*<button type="submit" name="Submit" value="PDF_ReportAccount"><img src="~/Assets/icon/pdf.png" width="30" height="30" /></button>*@
                            <button type="submit" name="Submit" value="Excel_ReportAccount"><img src="~/Assets/icon_xlxs.png" width="30" height="30" /></button>
                        </div>
                    </div>
                </div>
                <div class="box-body">
                    <div class="row">
                        <div class="col-xs-4">
                            <label>Filter</label>
                            @Html.DropDownListFor(model => model.FilterReportAccount, ViewBag.FilterAccountList as SelectList, new { @class = "form-control" })
                        </div>
                        <div class="col-xs-4">
                            <label>Periode</label>
                            @Html.TextBoxFor(model => model.PeriodeReportAccount, new { @class = "form-control pull-left", @placeholder = "Date", autocomplete = "off" })
                        </div>
                        <div class="col-xs-4">
                            <label>View by</label>
                            @Html.DropDownListFor(model => model.ViewByReportAccount
                       , new List<SelectListItem>
                        {
                           new SelectListItem{ Text="Choose", Value = "" },
                           new SelectListItem{ Text="Monthly", Value = "Monthly" },
                           new SelectListItem{ Text="Yearly", Value = "Yearly" }
                        }, new { @class = "form-control" })
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-xs-12">
                            <div id="chart">
                                <canvas id="areaChartAccount"></canvas>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-xs-3">

                        </div>
                        <div class="col-xs-3">

                        </div>
                        <div class="col-xs-3">

                        </div>
                        <div class="col-xs-3">

                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-lg-6">
            <div class="box box-primary">
                <div class="box-header with-border">
                    <div class="row">
                        <div class="col-sm-6">
                            <h4>Report of Account Cash In</h4>
                        </div>
                        <div class="col-sm-6" align="right">
                            @*<button type="submit" name="Submit" value="PDF_CashIn"><img src="~/Assets/icon/pdf.png" width="30" height="30" /></button>*@
                            <button type="submit" name="Submit" value="Excel_CashIn"><img src="~/Assets/icon_xlxs.png" width="30" height="30" /></button>
                        </div>
                    </div>
                </div>
                <div class="box-body">
                    <div class="row">
                        <div class="col-xs-4">
                            <label>Filter</label>
                            @Html.DropDownListFor(model => model.FilterReportCashIn, ViewBag.FilterCashInList as SelectList, new { @class = "form-control" })
                        </div>
                        <div class="col-xs-4">
                            <label>Periode</label>
                            @Html.TextBoxFor(model => model.PeriodeReportCashIn, new { @class = "form-control pull-left", @placeholder = "Date", autocomplete = "off" })
                        </div>
                        <div class="col-xs-4">
                            <label>View by</label>
                            @Html.DropDownListFor(model => model.ViewByReportCashIn
                       , new List<SelectListItem>
                        {
                          new SelectListItem{ Text="Choose", Value = "" },
                           new SelectListItem{ Text="Monthly", Value = "Monthly" },
                           new SelectListItem{ Text="Yearly", Value = "Yearly" }
                        }, new { @class = "form-control" })
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-xs-12">
                            <div id="chart">
                                <canvas id="areaChartCashIn"></canvas>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-xs-3">

                        </div>
                        <div class="col-xs-3">

                        </div>
                        <div class="col-xs-3">

                        </div>
                        <div class="col-xs-3">

                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-lg-6">
            <div class="box box-primary">
                <div class="box-header with-border">
                    <div class="row">
                        <div class="col-sm-6">
                            <h4>Report of Account Cash Out</h4>
                        </div>
                        <div class="col-sm-6" align="right">
                            @*<button type="submit" name="Submit" value="PDF_CashOut"><img src="~/Assets/icon/pdf.png" width="30" height="30" /></button>*@
                            <button type="submit" name="Submit" value="Excel_CashOut"><img src="~/Assets/icon_xlxs.png" width="30" height="30" /></button>
                        </div>
                    </div>
                </div>
                <div class="box-body">
                    <div class="row">
                        <div class="col-xs-4">
                            <label>Filter</label>
                            @Html.DropDownListFor(model => model.FilterReportCashOut, ViewBag.FilterCashOutList as SelectList, new { @class = "form-control" })
                        </div>
                        <div class="col-xs-4">
                            <label>Periode</label>
                            @Html.TextBoxFor(model => model.PeriodeReportCashOut, new { @class = "form-control pull-left", @placeholder = "Date", autocomplete = "off" })
                        </div>
                        <div class="col-xs-4">
                            <label>View by</label>
                            @Html.DropDownListFor(model => model.ViewByReportCashOut
                       , new List<SelectListItem>
                        {
                            new SelectListItem{ Text="Choose", Value = "" },
                           new SelectListItem{ Text="Monthly", Value = "Monthly" },
                           new SelectListItem{ Text="Yearly", Value = "Yearly" }
                        }, new { @class = "form-control" })
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-xs-12">
                            <div id="chart">
                                <canvas id="areaChartCashOut"></canvas>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-xs-3">

                        </div>
                        <div class="col-xs-3">

                        </div>
                        <div class="col-xs-3">

                        </div>
                        <div class="col-xs-3">

                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

}
<script>
    $(function () {
        $('#PeriodeReportBank').daterangepicker({
            autoclose: true
        })
        $('#PeriodeReportBank').val("");

        $('#PeriodeReportAccount').daterangepicker({
            autoclose: true
        })
        $('#PeriodeReportAccount').val("");

        $('#PeriodeReportCashIn').daterangepicker({
            autoclose: true
        })
        $('#PeriodeReportCashIn').val("");

        $('#PeriodeReportCashOut').daterangepicker({
            autoclose: true
        })
        $('#PeriodeReportCashOut').val("");

        getReportOfBank();
        getReportOfAccount();
        getReportOfAccountCashIn();
        getReportOfAccountCashOut();

        ChangeMethod("FilterReportBank", "change", "ReportOfBank", "Home", "POST");
        ChangeMethod("PeriodeReportBank", "change", "ReportOfBank", "Home", "POST");
        ChangeMethod("ViewByReportBank", "change", "ReportOfBank", "Home", "POST");

        ChangeMethod("FilterReportAccount", "change", "ReportOfAccount", "Home", "POST");
        ChangeMethod("PeriodeReportAccount", "change", "ReportOfAccount", "Home", "POST");
        ChangeMethod("ViewByReportAccount", "change", "ReportOfAccount", "Home", "POST");

        ChangeMethod("FilterReportCashIn", "change", "ReportOfAccountCashIn", "Home", "POST");
        ChangeMethod("PeriodeReportCashIn", "change", "ReportOfAccountCashIn", "Home", "POST");
        ChangeMethod("ViewByReportCashIn", "change", "ReportOfAccountCashIn", "Home", "POST");

        ChangeMethod("FilterReportCashOut", "change", "ReportOfAccountCashOut", "Home", "POST");
        ChangeMethod("PeriodeReportCashOut", "change", "ReportOfAccountCashOut", "Home", "POST");
        ChangeMethod("ViewByReportCashOut", "change", "ReportOfAccountCashOut", "Home", "POST");
    });
    function getReportOfBank() {
        $.ajax({
            type: "POST",
            url: "@Url.Action("ReportOfBank", "Home")",
            data: { model: model() },
            success: function (response) {
                var arrLabel = [];
                var arrCashIn = [];
                var arrCashOut = [];

                $(response).each(function (idx, dt) {
                    arrLabel.push(dt.Month);

                    if (dt.Cash_In == null) {
                        arrCashIn.push(0);
                    }
                    else {
                        arrCashIn.push(dt.Cash_In);
                    }

                    if (dt.Cash_Out == null) {
                        arrCashOut.push(0);
                    }
                    else {
                        arrCashOut.push(dt.Cash_Out);
                    }

                });

                var areaChartData = {
                    labels: arrLabel,
                    datasets: [
                      {
                          label: 'Cash In',
                          fillColor: 'rgba(210, 214, 222, 1)',
                          strokeColor: 'rgba(210, 214, 222, 1)',
                          pointColor: 'rgba(210, 214, 222, 1)',
                          pointStrokeColor: '#c1c7d1',
                          pointHighlightFill: '#fff',
                          pointHighlightStroke: 'rgba(220,220,220,1)',
                          data: arrCashIn
                      },
                      {
                          label: 'Cash Out',
                          fillColor: 'rgba(60,141,188,0.9)',
                          strokeColor: 'rgba(60,141,188,0.8)',
                          pointColor: '#3b8bba',
                          pointStrokeColor: 'rgba(60,141,188,1)',
                          pointHighlightFill: '#fff',
                          pointHighlightStroke: 'rgba(60,141,188,1)',
                          data: arrCashOut
                      }
                    ]
                }
                barChart(areaChartData, "areaChartBank")
                //Morris1("areaChartBank", response);
            },
            error: function (response) {
                alert(response)
            }
        });
    }

    function getReportOfAccount() {
        $.ajax({
            type: "POST",
            url: "@Url.Action("ReportOfAccount", "Home")",
            success: function (response) {
                var arrLabel = [];
                var arrCashIn = [];
                var arrCashOut = [];

                $(response).each(function (idx, dt) {
                    arrLabel.push(dt.Month);

                    if (dt.Cash_In == null) {
                        arrCashIn.push(0);
                    }
                    else {
                        arrCashIn.push(dt.Cash_In);
                    }

                    if (dt.Cash_Out == null) {
                        arrCashOut.push(0);
                    }
                    else {
                        arrCashOut.push(dt.Cash_Out);
                    }

                });

                var areaChartData = {
                    labels: arrLabel,
                    datasets: [
                      {
                          label: 'Cash In',
                          fillColor: 'rgba(210, 214, 222, 1)',
                          strokeColor: 'rgba(210, 214, 222, 1)',
                          pointColor: 'rgba(210, 214, 222, 1)',
                          pointStrokeColor: '#c1c7d1',
                          pointHighlightFill: '#fff',
                          pointHighlightStroke: 'rgba(220,220,220,1)',
                          data: arrCashIn
                      },
                      {
                          label: 'Cash Out',
                          fillColor: 'rgba(60,141,188,0.9)',
                          strokeColor: 'rgba(60,141,188,0.8)',
                          pointColor: '#3b8bba',
                          pointStrokeColor: 'rgba(60,141,188,1)',
                          pointHighlightFill: '#fff',
                          pointHighlightStroke: 'rgba(60,141,188,1)',
                          data: arrCashOut
                      }
                    ]
                }

                barChart(areaChartData, "areaChartAccount")
            },
            error: function (response) {
                alert(response)
            }
        });
    }

    function getReportOfAccountCashIn() {
        $.ajax({
            type: "POST",
            url: "@Url.Action("ReportOfAccountCashIn", "Home")",
            success: function (response) {
                var arrLabel = [];
                var arrOpt = [];
                var arrAcc = [];

                $(response).each(function (idx, dt) {

                    arrLabel.push(dt.Month);

                    if (dt.Operation == null) {
                        arrOpt.push(0);
                    }
                    else {
                        arrOpt.push(dt.Operation);
                    }

                    if (dt.Accounting == null) {
                        arrAcc.push(0);
                    }
                    else {
                        arrAcc.push(dt.Accounting);
                    }

                });

                var areaChartData = {
                    labels: arrLabel,
                    datasets: [
                      {
                          label: 'Operation',
                          fillColor: 'rgba(210, 214, 222, 1)',
                          strokeColor: 'rgba(210, 214, 222, 1)',
                          pointColor: 'rgba(210, 214, 222, 1)',
                          pointStrokeColor: '#c1c7d1',
                          pointHighlightFill: '#fff',
                          pointHighlightStroke: 'rgba(220,220,220,1)',
                          data: arrOpt
                      },
                      {
                          label: 'Accounting',
                          fillColor: 'rgba(60,141,188,0.9)',
                          strokeColor: 'rgba(60,141,188,0.8)',
                          pointColor: '#3b8bba',
                          pointStrokeColor: 'rgba(60,141,188,1)',
                          pointHighlightFill: '#fff',
                          pointHighlightStroke: 'rgba(60,141,188,1)',
                          data: arrAcc
                      }
                    ]
                }

                barChart(areaChartData, "areaChartCashIn")
            },
            error: function (response) {
                alert(response)
            }
        });
    }

    function getReportOfAccountCashOut() {
        $.ajax({
            type: "POST",
            url: "@Url.Action("ReportOfAccountCashOut", "Home")",
            success: function (response) {
                var arrLabel = [];
                var arrOpt = [];
                var arrAcc = [];

                $(response).each(function (idx, dt) {

                    arrLabel.push(dt.Month);

                    if (dt.Operation == null) {
                        arrOpt.push(0);
                    }
                    else {
                        arrOpt.push(dt.Operation);
                    }

                    if (dt.Accounting == null) {
                        arrAcc.push(0);
                    }
                    else {
                        arrAcc.push(dt.Accounting);
                    }

                });

                var areaChartData = {
                    labels: arrLabel,
                    datasets: [
                      {
                          label: 'Operation',
                          fillColor: 'rgba(210, 214, 222, 1)',
                          strokeColor: 'rgba(210, 214, 222, 1)',
                          pointColor: 'rgba(210, 214, 222, 1)',
                          pointStrokeColor: '#c1c7d1',
                          pointHighlightFill: '#fff',
                          pointHighlightStroke: 'rgba(220,220,220,1)',
                          data: arrOpt
                      },
                      {
                          label: 'Accounting',
                          fillColor: 'rgba(60,141,188,0.9)',
                          strokeColor: 'rgba(60,141,188,0.8)',
                          pointColor: '#3b8bba',
                          pointStrokeColor: 'rgba(60,141,188,1)',
                          pointHighlightFill: '#fff',
                          pointHighlightStroke: 'rgba(60,141,188,1)',
                          data: arrAcc
                      }
                    ]
                }

                barChart(areaChartData, "areaChartCashOut")
            },
            error: function (response) {
                alert(response)
            }
        });
    }

    function Morris1(id, model) {
        var area = new Morris.Area({
            element: id,
            resize: true,
            data: model,
            xkey: 'Month',
            ykeys: ['Cash_In', 'Cash_Out'],
            labels: ['Cash In', 'Cash Out'],
            lineColors: ['#a0d0e0', '#3c8dbc'],
            hideHover: 'auto'
        });
    }

    function Morris2(id, model) {
        var area = new Morris.Area({
            element: id,
            resize: true,
            data: model,
            xkey: 'Month',
            ykeys: ['Operation', 'Accounting'],
            labels: ['Operation', 'Accounting'],
            lineColors: ['#a0d0e0', '#3c8dbc'],
            hideHover: 'auto'
        });
    }

    function model() {
        return data =
        {
            FilterReportBank: $("#FilterReportBank").val(),
            PeriodeReportBank: $("#PeriodeReportBank").val(),
            ViewByReportBank: $("#ViewByReportBank").val(),
            FilterReportAccount: $("#FilterReportAccount").val(),
            PeriodeReportAccount: $("#PeriodeReportAccount").val(),
            ViewByReportAccount: $("#ViewByReportAccount").val(),
            FilterReportCashIn: $("#FilterReportCashIn").val(),
            PeriodeReportCashIn: $("#PeriodeReportCashIn").val(),
            ViewByReportCashIn: $("#ViewByReportCashIn").val(),
            FilterReportCashOut: $("#FilterReportCashOut").val(),
            PeriodeReportCashOut: $("#PeriodeReportCashOut").val(),
            ViewByReportCashOut: $("#ViewByReportCashOut").val()
        };
    }

    function ChangeMethod(id, event, action, controller, method, report) {
        $("#" + id).on(event, function () {
            $.ajax(
            {
                url: controller + "/" + action,
                type: method,
                data: { model: model() },
                success: function (response) {
                    if(report == "Bank")
                    {
                        getReportOfBank();
                    }
                    else if(report == "Account")
                    {
                        getReportOfAccount();
                    }
                    else if (report == "Cash In") {
                        getReportOfAccountCashIn();
                    }
                    else if (report == "Cash Out") {
                        getReportOfAccountCashOut();
                    }
                },
                error: function () {
                    alert("error");
                }
            });
        });
    }

    function barChart(bardata, id) {
        var Obj;    
        var chartOptions = {
            legend: {
                display: true,
                position: 'top',
                labels: {
                    boxWidth: 80,
                    fontColor: 'black'
                }
            }
        };


        new Chart(document.getElementById(id).getContext('2d'), {
            type: 'line',
            data: bardata,
            options: chartOptions
        });
    }
</script>

@model DIPO_INVESTAMA.Models.DashboardViewModels
@using (Html.BeginForm("Index", "Home", FormMethod.Post))
{
    <div class="row">
        <div class="col-lg-6">
            <div class="box box-primary">
                <div class="box-header with-border">
                    <div class="row">
                        <div class="col-sm-6">
                            <h4>Report of Bank</h4>
                        </div>
                        <div class="col-sm-6" align="right">
                            <button type="submit" name="Submit" value="PDF"><img src="~/Assets/icon/pdf.png" width="30" height="30" /></button>
                            <button type="submit" name="Submit" value="Excel"><img src="~/Assets/icon_xlxs.png" width="30" height="30" /></button>
                        </div>
                    </div>
                </div>
                <div class="box-body">
                    <div class="row">
                        <div class="col-xs-4">
                            <label>Filter</label>
                            @Html.DropDownListFor(model => model.FilterReportBank, ViewBag.FilterBankList as SelectList, new { @class = "form-control" })
                        </div>
                        <div class="col-xs-4">
                            <label>Periode</label>
                            @Html.TextBoxFor(model => model.PeriodeReportBank, new { @class = "form-control pull-left", @placeholder = "Date", autocomplete = "off" })
                        </div>
                        <div class="col-xs-4">
                            <label>View by</label>
                            @Html.DropDownListFor(model => model.ViewByReportBank
                       , new List<SelectListItem>
                        {
                           new SelectListItem{ Text="Choose", Value = "" },
                           new SelectListItem{ Text="Monthly", Value = "Y" },
                           new SelectListItem{ Text="Yearly", Value = "N" }
                        }, new { @class = "form-control" })
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-xs-12">
                            <div id="chart">
                                <canvas id="areaChartBank" style="height: 250px; width: 594px;" height="312" width="742"></canvas>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-xs-3">

                        </div>
                        <div class="col-xs-3">

                        </div>
                        <div class="col-xs-3">

                        </div>
                        <div class="col-xs-3">

                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-lg-6">
            <div class="box box-primary">
                <div class="box-header with-border">
                    <div class="row">
                        <div class="col-sm-6">
                            <h4>Report of Account</h4>
                        </div>
                        <div class="col-sm-6" align="right">
                            <button type="submit" name="Submit" value="PDF"><img src="~/Assets/icon/pdf.png" width="30" height="30" /></button>
                            <button type="submit" name="Submit" value="Excel"><img src="~/Assets/icon_xlxs.png" width="30" height="30" /></button>
                        </div>
                    </div>
                </div>
                <div class="box-body">
                    <div class="row">
                        <div class="col-xs-4">
                            <label>Filter</label>
                            @Html.DropDownListFor(model => model.FilterReportAccount, ViewBag.FilterAccountList as SelectList, new { @class = "form-control" })
                        </div>
                        <div class="col-xs-4">
                            <label>Periode</label>
                            @Html.TextBoxFor(model => model.PeriodeReportAccount, new { @class = "form-control pull-left", @placeholder = "Date", autocomplete = "off" })
                        </div>
                        <div class="col-xs-4">
                            <label>View by</label>
                            @Html.DropDownListFor(model => model.ViewByReportAccount
                       , new List<SelectListItem>
                        {
                           new SelectListItem{ Text="Choose", Value = "" },
                           new SelectListItem{ Text="Monthly", Value = "Y" },
                           new SelectListItem{ Text="Yearly", Value = "N" }
                        }, new { @class = "form-control" })
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-xs-12">
                            <div id="chart">
                                <canvas id="areaChartAccount" style="height: 250px; width: 594px;" height="312" width="742"></canvas>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-xs-3">

                        </div>
                        <div class="col-xs-3">

                        </div>
                        <div class="col-xs-3">

                        </div>
                        <div class="col-xs-3">

                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-lg-6">
            <div class="box box-primary">
                <div class="box-header with-border">
                    <div class="row">
                        <div class="col-sm-6">
                            <h4>Report of Account Cash In</h4>
                        </div>
                        <div class="col-sm-6" align="right">
                            <button type="submit" name="Submit" value="PDF"><img src="~/Assets/icon/pdf.png" width="30" height="30" /></button>
                            <button type="submit" name="Submit" value="Excel"><img src="~/Assets/icon_xlxs.png" width="30" height="30" /></button>
                        </div>
                    </div>
                </div>
                <div class="box-body">
                    <div class="row">
                        <div class="col-xs-4">
                            <label>Filter</label>
                            @Html.DropDownListFor(model => model.FilterReportCashIn, ViewBag.FilterCashInList as SelectList, new { @class = "form-control" })
                        </div>
                        <div class="col-xs-4">
                            <label>Periode</label>
                            @Html.TextBoxFor(model => model.PeriodeReportCashIn, new { @class = "form-control pull-left", @placeholder = "Date", autocomplete = "off" })
                        </div>
                        <div class="col-xs-4">
                            <label>View by</label>
                            @Html.DropDownListFor(model => model.ViewByReportCashIn
                       , new List<SelectListItem>
                        {
                           new SelectListItem{ Text="Choose", Value = "" },
                           new SelectListItem{ Text="Monthly", Value = "Y" },
                           new SelectListItem{ Text="Yearly", Value = "N" }
                        }, new { @class = "form-control" })
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-xs-12">
                            <div id="chart">
                                <canvas id="areaChartCashIn" style="height: 250px; width: 594px;" height="312" width="742"></canvas>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-xs-3">

                        </div>
                        <div class="col-xs-3">

                        </div>
                        <div class="col-xs-3">

                        </div>
                        <div class="col-xs-3">

                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-lg-6">
            <div class="box box-primary">
                <div class="box-header with-border">
                    <div class="row">
                        <div class="col-sm-6">
                            <h4>Report of Account Cash Out</h4>
                        </div>
                        <div class="col-sm-6" align="right">
                            <button type="submit" name="Submit" value="PDF"><img src="~/Assets/icon/pdf.png" width="30" height="30" /></button>
                            <button type="submit" name="Submit" value="Excel"><img src="~/Assets/icon_xlxs.png" width="30" height="30" /></button>
                        </div>
                    </div>
                </div>
                <div class="box-body">
                    <div class="row">
                        <div class="col-xs-4">
                            <label>Filter</label>
                            @Html.DropDownListFor(model => model.FilterReportCashOut, ViewBag.FilterCashOutList as SelectList, new { @class = "form-control" })
                        </div>
                        <div class="col-xs-4">
                            <label>Periode</label>
                            @Html.TextBoxFor(model => model.PeriodeReportCashOut, new { @class = "form-control pull-left", @placeholder = "Date", autocomplete = "off" })
                        </div>
                        <div class="col-xs-4">
                            <label>View by</label>
                            @Html.DropDownListFor(model => model.ViewByReportCashOut
                       , new List<SelectListItem>
                        {
                           new SelectListItem{ Text="Choose", Value = "" },
                           new SelectListItem{ Text="Monthly", Value = "Y" },
                           new SelectListItem{ Text="Yearly", Value = "N" }
                        }, new { @class = "form-control" })
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-xs-12">
                            <div id="chart">
                                <canvas id="areaChartCashOut" style="height: 250px; width: 594px;" height="312" width="742"></canvas>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-xs-3">

                        </div>
                        <div class="col-xs-3">

                        </div>
                        <div class="col-xs-3">

                        </div>
                        <div class="col-xs-3">

                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

}
<script>
    $(function () {
        $('#PeriodeReportBank').daterangepicker({
            autoclose: true
        })
        $('#PeriodeReportBank').val("");

        var areaChartCanvasBank = $('#areaChartBank').get(0).getContext('2d')
        // This will get the first returned node in the jQuery collection.
        var areaChartBank = new Chart(areaChartCanvasBank)

        var areaChartData = {
            labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],
            datasets: [
              {
                  label: 'Electronics',
                  fillColor: 'rgba(210, 214, 222, 1)',
                  strokeColor: 'rgba(210, 214, 222, 1)',
                  pointColor: 'rgba(210, 214, 222, 1)',
                  pointStrokeColor: '#c1c7d1',
                  pointHighlightFill: '#fff',
                  pointHighlightStroke: 'rgba(220,220,220,1)',
                  data: [65, 59, 80, 81, 56, 55, 40]
              },
              {
                  label: 'Digital Goods',
                  fillColor: 'rgba(60,141,188,0.9)',
                  strokeColor: 'rgba(60,141,188,0.8)',
                  pointColor: '#3b8bba',
                  pointStrokeColor: 'rgba(60,141,188,1)',
                  pointHighlightFill: '#fff',
                  pointHighlightStroke: 'rgba(60,141,188,1)',
                  data: [28, 48, 40, 19, 86, 27, 90]
              }
            ]
        }

        var areaChartOptions = {
            //Boolean - If we should show the scale at all
            showScale: true,
            //Boolean - Whether grid lines are shown across the chart
            scaleShowGridLines: false,
            //String - Colour of the grid lines
            scaleGridLineColor: 'rgba(0,0,0,.05)',
            //Number - Width of the grid lines
            scaleGridLineWidth: 1,
            //Boolean - Whether to show horizontal lines (except X axis)
            scaleShowHorizontalLines: true,
            //Boolean - Whether to show vertical lines (except Y axis)
            scaleShowVerticalLines: true,
            //Boolean - Whether the line is curved between points
            bezierCurve: true,
            //Number - Tension of the bezier curve between points
            bezierCurveTension: 0.3,
            //Boolean - Whether to show a dot for each point
            pointDot: false,
            //Number - Radius of each point dot in pixels
            pointDotRadius: 4,
            //Number - Pixel width of point dot stroke
            pointDotStrokeWidth: 1,
            //Number - amount extra to add to the radius to cater for hit detection outside the drawn point
            pointHitDetectionRadius: 20,
            //Boolean - Whether to show a stroke for datasets
            datasetStroke: true,
            //Number - Pixel width of dataset stroke
            datasetStrokeWidth: 2,
            //Boolean - Whether to fill the dataset with a color
            datasetFill: true,
            //String - A legend template
            legendTemplate: '<ul class="<%=name.toLowerCase()%>-legend"><% for (var i=0; i<datasets.length; i++){%><li><span style="background-color:<%=datasets[i].lineColor%>"></span><%if(datasets[i].label){%><%=datasets[i].label%><%}%></li><%}%></ul>',
            //Boolean - whether to maintain the starting aspect ratio or not when responsive, if set to false, will take up entire container
            maintainAspectRatio: true,
            //Boolean - whether to make the chart responsive to window resizing
            responsive: true
        }

        //Create the line chart
        areaChartBank.Line(areaChartData, areaChartOptions)

        var areaChartCanvasAccount = $('#areaChartAccount').get(0).getContext('2d')
        var areaChartAccount = new Chart(areaChartCanvasAccount)
        areaChartAccount.Line(areaChartData, areaChartOptions)

        var areaChartCanvasCashIn = $('#areaChartCashIn').get(0).getContext('2d')
        var areaChartCashIn = new Chart(areaChartCanvasCashIn)
        areaChartCashIn.Line(areaChartData, areaChartOptions)

        var areaChartCanvasCashOut = $('#areaChartCashOut').get(0).getContext('2d')
        var areaChartcashOut = new Chart(areaChartCanvasCashOut)
        areaChartcashOut.Line(areaChartData, areaChartOptions)

        @*$("#PeriodeReportAccount").on("change", function () {
            var data = { PeriodeReportAccount: $("#PeriodeReportAccount").val(), FilterReportBank: $("#FilterReportBank").val(), ViewByReportBank: $("#ViewByReportBank").val(), SortBy: $("#SortBy").val() };

            $.ajax(
            {
                url: "@Url.Action("Index", "Output")",
                type: 'POST',
                data: { model: data },
                success: function (response) {

                },
                error: function () {
                    alert("error");
                }
            });
        });

        $("#FilterReportBank").on("change", function () {
            var data = { PeriodeReportAccount: $("#PeriodeReportAccount").val(), FilterReportBank: $("#FilterReportBank").val(), ViewByReportBank: $("#ViewByReportBank").val(), SortBy: $("#SortBy").val() };

            $.ajax(
            {
                url: "@Url.Action("Index", "Output")",
                type: 'POST',
                data: { model: data },
                success: function (response) {

                },
                error: function () {
                    alert("error");
                }
            });
        });

        $("#ViewByReportBank").on("change", function () {
            var data = { PeriodeReportAccount: $("#PeriodeReportAccount").val(), FilterReportBank: $("#FilterReportBank").val(), ViewByReportBank: $("#ViewByReportBank").val(), SortBy: $("#SortBy").val() };

            $.ajax(
            {
                url: "@Url.Action("Index", "Output")",
                type: 'POST',
                data: { model: data },
                success: function (response) {

                },
                error: function () {
                    alert("error");
                }
            });
        });*@

        $('#PeriodeReportAccount').daterangepicker({
            autoclose: true
        })
        $('#PeriodeReportAccount').val("");

        $('#PeriodeReportCashIn').daterangepicker({
            autoclose: true
        })
        $('#PeriodeReportCashIn').val("");

        $('#PeriodeReportCashOut').daterangepicker({
            autoclose: true
        })
        $('#PeriodeReportCashOut').val("");
    });
</script>
